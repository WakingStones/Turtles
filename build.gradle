plugins {
    id 'java'
    id "de.undercouch.download" version "3.4.3"
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

group 'org.wakingstones'
version '2.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    maven {
        name = 'gradle-plugins'
        url = 'https://plugins.gradle.org/m2'
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
    maven {
        name = 'forge'
        url = 'http://files.minecraftforge.net/maven'
    }
    maven {
        name = 'minecraft'
        url = 'https://libraries.minecraft.net/'
    }
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'lib', include: ['*.jar', '*.cfg'], exclude: [
            "gson-*.jar",
            "guava-*.jar"
    ])
    compile 'org.spongepowered:mixin:0.8'
    compile 'net.minecraft:launchwrapper:1.11'
    compile 'com.google.guava:guava:21.0'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'org.ow2.asm:asm-debug-all:5.2'
}

configurations {
    compile.exclude module: 'lwjgl'
}

task downloadZipFile(type: Download) {
    src 'https://download.scrolls.com/callersbane/server/CallersBane-Server-2.0.1.zip'
    dest new File(buildDir, 'server.zip')
}

task unzip(type: Copy) {
    from zipTree(downloadZipFile.dest)
    into "${buildDir}/server"
}

task moveJar(type: Copy) {
    from "${buildDir}/server/CallersBane-Server/Server.jar"
    into "lib"
    rename "Server.jar", "callersbane-server.jar"
}

task copyLibs(type: Copy) {
    from "${buildDir}/server/CallersBane-Server/lib/"
    include "*.jar"
    into "lib"
}

task cleanup(type: Delete) {
    delete "${buildDir}/server", "${buildDir}/server.zip"
}

task copyToLib(type: Copy) {
    into "$buildDir/libs/lib"
    //removes the included libraries that Caller's Bane has
    from(configurations.compile - fileTree("lib"))
}

task prepareWorkspace(type: GradleBuild) {
    tasks = ['downloadZipFile', 'unzip', 'moveJar', 'copyLibs', 'cleanup']
}

task generateRunScript() {
    doLast {
        new File("$buildDir/libs/startServer.sh").text = """java -Dio.netty.epollBugWorkaround=true -Dscrolls.mode=PROD -Dscrolls.node.id=test-server -jar turtles-${version}.jar"""
        new File("$buildDir/libs/startServer.bat").text = """java -Dio.netty.epollBugWorkaround=true -Dscrolls.mode=PROD -Dscrolls.node.id=test-server -jar turtles-${version}.jar"""
    }
}

jar {
    manifest {
        attributes(
                "Class-Path": "Server.jar cfg/ " + fileTree("lib").collect({relativePath(it) }).join(" ").replaceAll("\\\\", "/")
                        + " lib/" + configurations.compile.filter({it.isFile()}).files.name.join(" lib/"),
                "Main-Class": "org.wakingstones.turtles.core.Main"
        )
    }
    exclude("**/hibernate.cfg.xml")
}

shadowJar {
}

build.dependsOn(generateRunScript, copyToLib)
